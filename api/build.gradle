plugins {
    id 'application'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.4'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'hmcts.ccd.sdk' version '0.16.4'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

configurations {
    functionalTestImplementation.extendsFrom testImplementation
    functionalTestRuntime.extendsFrom testRuntime
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    failFast = true
    useJUnitPlatform()
}

task functional(type: Test) {
    description = "Runs functional tests"
    group = "Verification"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    failFast = true
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
    maxWarnings = 0
    toolVersion = '8.29'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
    toolVersion = "6.18.0"
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}


dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.68'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '30.1.1-jre') {
            entry 'guava'
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/gov-uk-notify/maven"
    }
}

def versions = [
    assertJ           : '3.19.0',
    ccdConfigGenerator: '0.16.4',
    ccdStoreClient    : '4.7.6',
    idamClient        : '2.0.0',
    junit             : '5.7.1',
    junitPlatform     : '1.7.1',
    lombok            : '1.18.12',
    reformsJavaLogging: '5.1.7',
    springBoot        : springBoot.class.package.implementationVersion,
    springfoxSwagger  : '3.0.0',
    s2sClient         : '4.0.0'
]

ext["rest-assured.version"] = '4.3.0'

ext.libraries = [
    junit5: [
        "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
        "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
        "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
    ]
]

// force junit5 deps to use groovy v3 which fixes reflective call errors for java 11
// rest assured 4.2 -> 4.3 jumps to groovy v3. junit v5.6 still on v2.5
dependencyManagement {
    dependencies {
        dependencySet(group: 'org.codehaus.groovy', version: '3.0.7') {
            entry 'groovy'
            entry 'groovy-json'
            entry 'groovy-xml'
        }
    }
}

dependencies {
    implementation project(':ccd-definitions')
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.7.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.2'

    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.17.0-RELEASE'

    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformsJavaLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformsJavaLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformsJavaLogging

    implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: versions.idamClient
    implementation (group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdStoreClient)

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.14.1'

    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.43'
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '10.0.5'

    compile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    compile group: 'uk.gov.hmcts.reform', name: 'ccd-config-generator', version: versions.ccdConfigGenerator
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.s2sClient

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation libraries.junit5
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
        exclude(module: 'android-json')
    }

    testImplementation group: 'io.rest-assured', name: 'rest-assured'

    testImplementation group: 'org.assertj', name: 'assertj-core', version: versions.assertJ
    testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '3.0.2'

    testCompile group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
}

mainClassName = 'uk.gov.hmcts.reform.divorce.caseapi.CaseApiApplication'

bootJar {
    getArchiveFileName().set(provider {
        'nfdiv-case-api.jar'
    })

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}
