# Don't modify this file, it is only needed for the pipeline to set the image and ingressHost
java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    CHANGE_ID: ${CHANGE_ID}
    CITIZEN_UPDATE_CASE_STATE_ENABLED: true
    CASE_DATA_STORE_BASEURL: http://${SERVICE_NAME}-ccd-data-store-api
    NFD_DB_HOST: ${SERVICE_NAME}-postgresql
    NFD_DB_PORT: 5432
    NFD_DB_USERNAME: ${POSTGRES_USER}
    NFD_DB_PASSWORD: ${POSTGRES_PASSWORD}
    NFD_DB_CONNECTION_OPTIONS: "?stringtype=unspecified"
    AAC_MANAGE_CASE_ASSIGNMENT_BASEURL: http://${SERVICE_NAME}-aac-manage-case-assignment
    DATABASE_MIGRATION: true
  keyVaults:
    nfdiv:
      secrets:
        - name: AppInsightsInstrumentationKey-Preview
          alias: APP_INSIGHTS_KEY
        - name: uk-gov-notify-api-key
          alias: UK_GOV_NOTIFY_API_KEY
        - name: s2s-case-api-secret
          alias: S2S_SECRET
        - name: idam-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-systemupdate-username
          alias: IDAM_SYSTEM_UPDATE_USERNAME
        - name: idam-systemupdate-password
          alias: IDAM_SYSTEM_UPDATE_PASSWORD
        - name: report-email
          alias: REPORT_EMAIL
  postgresql:
    enabled: true
    image:
      registry: hmctspublic.azurecr.io
      repository: imported/bitnami/postgresql
      tag: '15'
    primary:
      persistence:
        enabled: false
      resources:
        requests:
          cpu: 25m
      initdb:
        scripts:
          init.sql: |
            CREATE DATABASE nfd WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    auth:
      username: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
nfdiv-frontend:
  enabled: true
  nodejs:
    registerAdditionalDns:
      enabled: false
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-frontend
    image: hmctspublic.azurecr.io/nfdiv/frontend:latest #pr-xxxx
    ingressHost: frontend-${SERVICE_FQDN}
    environment:
      CASE_TYPE: NFD-${CHANGE_ID}
      SKIP_DIV_CASE_CHECK: true

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  redirect_uris:
    divorce:
      - https://frontend-${SERVICE_FQDN}/oauth2/callback
      - https://frontend-${SERVICE_FQDN}/oauth2/callback-applicant2

ccd-def-cleanup:
  enabled: true
  change_id: ${CHANGE_ID}
  case_type_ids:
    - NFD
    - NO_FAULT_DIVORCE_BulkAction

ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: false
    apiGatewayWeb:
      enabled: true
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: false
    s2s:
      enabled: false
    postgresql:
      enabled: false
    ras:
      enabled: false
    userProfileImporter:
      enabled: false
    userProfile:
      enabled: false
  global:
    ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
    ccdDataStoreUrl: http://${SERVICE_NAME}-ccd-data-store-api
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    ccdUserProfileUrl: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    amRoleAssignmentServiceUrl: http://am-role-assignment-service-aat.service.core-compute-aat.internal
    postgresUsername: hmcts
    postgresPassword: ${POSTGRES_PASSWORD}
    postgresSecret: postgres
    postgresHostname: ${SERVICE_NAME}-postgresql
  ccd-api-gateway-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/api-gateway-web:latest
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_SECRET}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_IDAM_CLIENT_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}
      secrets: []
  ccd-admin-web:
    nodejs:
      environment:
      secrets: []
  ccd-data-store-api:
    java:
      image: 'hmctspublic.azurecr.io/ccd/data-store-api:pr-2496-6f2e3d9-20241115145235'
      autoscaling:
        enabled: false
      environment:
        CASE_DOCUMENT_AM_API_ATTACH_DOCUMENT_ENABLED: false
        DATA_STORE_IDAM_KEY: ${CCD_DATA_STORE_S2S_SECRET}
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
        DATA_STORE_DB_PASSWORD: ${POSTGRES_PASSWORD}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_ps,bulk_scan_orchestrator,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,nfdiv_case_api,ccd_case_document_am_api,aac_manage_case_assignment
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        CCD_MULTIPARTY_FIX_ENABLED: false
        CCD_MULTIPARTY_EVENTS: DEFENDANT_RESPONSE,ACKNOWLEDGE_CLAIM,CLAIMANT_RESPONSE
        POC_FEATURE_ENABLED: true
        CCD_POC_CASE_TYPES: nfd
        POC_APIS_URL: "https://${SERVICE_FQDN}"
      secrets: []
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
  ccd-message-publisher:
    java:
      environment:
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
        CCD_CASE_EVENTS_DESTINATION: ccd-case-events
      secrets: []
  am-role-assignment-service:
    java:
      environment:
        ROLE_ASSIGNMENT_DB_OPTIONS: "?stringtype=unspecified"
      secrets: []
  ccd-user-profile-api:
    java:
      environment:
        USER_PROFILE_DB_OPTIONS: "?stringtype=unspecified"
        USER_PROFILE_DB_PASSWORD: ${POSTGRES_PASSWORD}
      secrets: []
  ccd-definition-store-api:
    java:
      environment:
        DEFINITION_STORE_DB_OPTIONS: "?stringtype=unspecified"
        DEFINITION_STORE_DB_PASSWORD: ${POSTGRES_PASSWORD}
      secrets: []
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
  postgresql:
    persistence:
      enabled: false

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    memoryRequests: 2Gi
    cpuRequests: 2000m
    memoryLimits: 4Gi
    cpuLimits: 3500m
    devmemoryRequests: 6Gi
    devcpuRequests: 2000m
    devmemoryLimits: 8Gi
    devcpuLimits: 4500m
    environment:
      HEALTH_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal/health
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_TERMS_AND_CONDITIONS: http://xui-terms-and-conditions-${SERVICE_FQDN}.service.core-compute-preview.internal
      JURISDICTIONS: DIVORCE
      LAUNCH_DARKLY_CLIENT_ID: ~
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://${SERVICE_NAME}-aac-manage-case-assignment
aac-manage-case-assignment:
  enabled: true
  java:
    disableKeyVaults: true
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
    image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
    ingressHost: manage-case-assignment-${SERVICE_NAME}.preview.platform.hmcts.net
    environment:
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
      MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
      MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,fpl_case_service,divorce_frontend,divorce_ccd_submission,finrem_case_orchestration,nfdiv_case_api
      CCD_DATA_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-data-store-api
      CCD_DEFINITION_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store
      PRD_HOST: http://rd-professional-api-aat.service.core-compute-aat.internal
      IDAM_CAA_USERNAME: ${IDAM_CAA_USERNAME}
      IDAM_CAA_PASSWORD: ${IDAM_CAA_PASSWORD}
      IDAM_CLIENT_SECRET: ${IDAM_MCA_CLIENT_SECRET}
      MANAGE_CASE_S2S_KEY: ${MANAGE_CASE_S2S_KEY}
      IDAM_NOC_APPROVER_USERNAME: ${IDAM_NOC_APPROVER_USERNAME}
      IDAM_NOC_APPROVER_PASSWORD: ${IDAM_NOC_APPROVER_PASSWORD}
      NOTIFY_MCA_API_KEY: ${NOTIFY_MCA_API_KEY}
    autoscaling:
      enabled: false
wiremock:
  enabled: true
  image: "wiremock/wiremock"
  applicationPort: 8080
  imagePullPolicy: Always
  releaseNameOverride : ${SERVICE_NAME}-wiremock
  ingressHost: wiremock-${SERVICE_NAME}.preview.platform.hmcts.net
  volumes:
    - name: wiremock-mocks
      configMap:
        name: ${SERVICE_NAME}-wiremock-wm
  volumeMounts:
    - name: wiremock-mocks
      mountPath: /home/wiremock/mappings
      subPath: mappings