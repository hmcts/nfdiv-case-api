ccd:
  postgres:
    enabled: true
  elastic:
    enabled: true
  xui:
    enabled: true
  mo:
    enabled: true

java:
  applicationPort: 8489
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  devcpuRequests: 500m
  cpuLimits: 4
  cpuRequests: 500m
  devmemoryRequests: 4Gi
  devmemoryLimits: 4Gi
  environment:
    RSE_LIB_DB_HOST: "{{ .Release.Name }}-postgresql"
    RSE_LIB_DB_PORT: 5432
    CFT_LIB_NO_DOCKER: true
    SEARCH_ELASTIC_HOSTS: ${SERVICE_NAME}-es-master
    ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
    OPEN_ID_API_BASE_URI: https://idam-web-public.aat.platform.hmcts.net/o
    IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net/o
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: https://idam-web-public.aat.platform.hmcts.net/o
    IDAM_API_URL_BASE: https://idam-api.aat.platform.hmcts.net
    IDAM_API_BASEURL: https://idam-api.aat.platform.hmcts.net
    IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
    IDAM_USER_URL: https://idam-web-public.{{ .Values.global.environment }}.platform.hmcts.net
    IDAM_S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-{{ .Values.global.environment }}.internal:8443/openam/oauth2/hmcts
    IDAM_S2S-AUTH_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
    CCD_DOCUMENT_URL_PATTERN: .*
    S2S_AUTHORISED_SERVICES: ccd_definition,ccd_data,xui_webapp,nfdiv_case_api,ccd_gw,divorce_frontend
    CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: aac_manage_case_assignment,fpl_case_service,finrem_case_orchestration,iac,divorce_frontend,civil_service,nfdiv_case_api
    DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,fpl_case_service,ccd_data,ccd_ps,divorce_frontend,payment-api,xui_webapp,nfdiv_case_api,ccd_case_document_am_api,am_role_assignment_service
    ROLE_ASSIGNMENT_S2S_AUTHORISED_SERVICES: ccd_gw,am_role_assignment_service,am_org_role_mapping_service,xui_webapp,aac_manage_case_assignment,ccd_data,nfdiv_case_api
    CITIZEN_UPDATE_CASE_STATE_ENABLED: true
    SPRING_CLOUD_PROPERTIESVOLUME_PATHS: /mnt/secrets/nfdiv
    SPRING_CONFIG_IMPORT: optional:configtree:/mnt/secrets/nfdiv/
  keyVaults:
    nfdiv:
      secrets:
        - name: AppInsightsInstrumentationKey-Preview
          alias: APP_INSIGHTS_KEY
        - name: uk-gov-notify-api-key
          alias: UK_GOV_NOTIFY_API_KEY
        - name: s2s-case-api-secret
          alias: S2S_SECRET
        - name: idam-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-systemupdate-username
          alias: IDAM_SYSTEM_UPDATE_USERNAME
        - name: idam-systemupdate-password
          alias: IDAM_SYSTEM_UPDATE_PASSWORD
        - name: idam-systemupdate-username
          alias: IDAM_DATA_STORE_SYSTEM_USER_USERNAME
        - name: idam-systemupdate-password
          alias: IDAM_DATA_STORE_SYSTEM_USER_PASSWORD
        - name: idam-data-store-client-secret
          alias: IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET
        - name: s2s-data-store-secret
          alias: DATA_STORE_IDAM_KEY
        - name: s2s-definition-store-secret
          alias: DEFINITION_STORE_IDAM_KEY
        - name: s2s-role-assignment-store-secret
          alias: AM_ROLE_ASSIGNMENT_SERVICE_SECRET
        - name: s2s-manage-case-assignment-secret
          alias: MANAGE_CASE_S2S_KEY

postgresql:
  persistence:
    enabled: true
  resources:
    requests:
      cpu: 25m
  auth:
    username: postgres
    password: postgres
  primary:
    initdb:
      scripts:
        create.sql: |
          CREATE DATABASE "datastore" WITH OWNER = postgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "definitionstore" WITH OWNER = postgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "userprofile" WITH OWNER = postgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "am" WITH OWNER = postgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

elasticsearch:
  clusterName: "es"
  imageTag: "7.17.0"
  replicas: 1
  initResources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "25m"
      memory: "512Mi"
  minimumMasterNodes: 1
  antiAffinity: "soft"
  esJavaOpts: "-Xmx512m -Xms512m"
  extraEnvs:
    - name: discovery.type
      value: single-node
    - name: cluster.initial_master_nodes
      value: ""
    - name: action.auto_create_index
      value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
  persistence:
    enabled: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
    path: /
    hosts:
      - es-${SERVICE_FQDN}

logstash:
  image:
    repository: hmctspublic.azurecr.io/ccd/logstash
    tag: ccd-divorce-logstash-latest
    pullPolicy: Always
  logstashJavaOpts: -Xmx1g -Xms512M
  persistence:
    enabled: false
  volumeMounts:
    - name: pipeline
      mountPath: /usr/share/logstash/files
  elasticsearch:
    host: ${SERVICE_NAME}-es-master
    port: 9200
  configTpl:
    xpack.monitoring.enabled: "false"
    db.url: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/datastore?ssl=disable&stringtype=unspecified
    db.user: postgres
    db.pwd: postgres
    es.data.nodes.url: http://${SERVICE_NAME}-es-master:9200
  livenessProbe:
    initialDelaySeconds: 90

xui-webapp:
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    devcpuRequests: 250m
    devmemoryRequests: 1024Mi
    devmemoryLimits: 1024Mi
    environment:
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_FQDN}
      SERVICES_DOCUMENTS_API_V2: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
      NODE_OPTIONS: --max-old-space-size=900
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://${SERVICE_FQDN}
      FEATURE_REDIS_ENABLED: false
      JURISDICTIONS: DIVORCE

xui-mo-webapp:
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-mo-webapp
    image: hmctspublic.azurecr.io/xui/mo-webapp:latest
    ingressHost: xui-mo-${SERVICE_FQDN}
    environment:
      MANAGE_CASE_LINK: https://xui-${SERVICE_FQDN}/cases
      MANAGE_ORG_LINK: https://xui-mo-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}
      SERVICES_MCA_PROXY_API: http://aac-${SERVICE_FQDN}
      CASE_TYPES: NFD

nfdiv-frontend:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-frontend
    image: hmctspublic.azurecr.io/nfdiv/frontend:latest #pr-xxxx
    ingressHost: frontend-${SERVICE_FQDN}
    environment:
      CCD_URL: http://${SERVICE_FQDN}
      SKIP_DIV_CASE_CHECK: true

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    XUIMO:
      - https://xui-mo-${SERVICE_FQDN}/oauth2/callback
    divorce:
      - https://frontend-${SERVICE_FQDN}/oauth2/callback
      - https://frontend-${SERVICE_FQDN}/oauth2/callback-applicant2
