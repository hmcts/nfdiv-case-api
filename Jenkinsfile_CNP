#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "nfdiv"
def component = "case-api"

GradleBuilder builder = new GradleBuilder(this, product)

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   envVariable: envVariable
  ]
}

def secrets = [
        's2s-${env}'      : [
                secret('microservicekey-ccd-data', 'DATA_STORE_S2S_KEY'),
                secret('microservicekey-ccd-definition', 'DEFINITION_STORE_S2S_KEY'),
                secret('microservicekey-ccd-gw', 'API_GATEWAY_S2S_KEY'),
                secret('microservicekey-ccd-admin', 'ADMIN_S2S_KEY')
        ],
        'ccd-${env}'      : [
                secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET'),
                secret('ccd-admin-web-oauth2-client-secret', 'ADMIN_WEB_IDAM_SECRET'),
                secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN'),
                secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY')

        ]
]

withPipeline(type, product, component) {
    enableAksStagingDeployment()
    disableLegacyDeployment()
    after('test') {
       builder.gradle('integration')
    }
    onPR {
        loadVaultSecrets(secrets)
    }
    before('functionalTest:preview') {
       steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'ccd-definitions/build/ccd-config/*.xlsx'

       env.CCD_ADMIN_URL="https://admin-web-nfdiv-case-api-pr-${CHANGE_ID}.service.core-compute-preview.internal"
       env.CCD_DATA_API_URL="http://ccd-data-store-api-nfdiv-case-api-pr-${CHANGE_ID}.service.core-compute-preview.internal"
       env.CCD_WEB_URL="https://case-management-web-nfdiv-case-api-pr-${CHANGE_ID}.service.core-compute-preview.internal/v2/case/"
       env.CCD_DEFINITION_STORE_API_BASE_URL="https://ccd-definition-store-nfdiv-case-api-pr-${CHANGE_ID}.service.core-compute-preview.internal"
       env.IMPORT_PROD_LIKE=true

       env.IDAM_API_BASE_URL = "https://idam-api.aat.platform.hmcts.net"
       env.SERVICE_AUTH_PROVIDER_API_BASE_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"

       uploadCoreCaseDataDefinitions()
     }
}


def uploadCoreCaseDataDefinitions() {
  dir("${WORKSPACE}/bin"){
    sh "./process-and-import-ccd-definition.sh"
  }
}
